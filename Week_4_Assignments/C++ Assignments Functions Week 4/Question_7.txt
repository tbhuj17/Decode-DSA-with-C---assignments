Can the same function name be used for different functions without any conflict?

Ans-> YES, it is possible for us to use the functions with the same name. This concept
    is known as 'function overloading'. As C++ is an OOP language, thus it supports 
    function overloading. It works as:
    When we call the function and pass a parameter, then the compiler compares the data type
    of actual parameters with the formal parameters. The unction with best matched parameters
    is called.
    Consider the example:-

    #include<iostream>
    using namespace std;

    class A
    {
        public:
            int area(int len, int bre) {return len*bre;}
            int area(int rad) {return 3.14*rad*rad;}
    };
    int main()
    {
        A a1;
        cout<<a1.area(2, 3)<<endl;
        cout<<a1.area(5);
    }

    At first, when area function is called with parameters as (2, 3) then first function 
    which calculates the area of rectangle is called, but when area function is called
    with 5 as parameter, then second function which calculates the area of circle is called.
     